# Generated by Django 3.0.8 on 2020-10-05 21:14

from django.conf import settings
import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('grout', '0025_auto_20180730_2038'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DedupeJob',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('STARTED', 'Started'), ('SUCCESS', 'Success'), ('ERROR', 'Error')], default='PENDING', max_length=8)),
                ('celery_task', models.UUIDField(null=True)),
            ],
            options={
                'get_latest_by': 'datetime',
            },
        ),
        migrations.CreateModel(
            name='DriverRecord',
            fields=[
                ('record_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='grout.Record')),
                ('weather', models.CharField(blank=True, max_length=50, null=True)),
                ('light', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('city_district', models.CharField(blank=True, max_length=50, null=True)),
                ('county', models.CharField(blank=True, max_length=50, null=True)),
                ('neighborhood', models.CharField(blank=True, max_length=50, null=True)),
                ('road', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('grout.record',),
        ),
        migrations.CreateModel(
            name='DriverTemRecord',
            fields=[
                ('record_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='grout.Record')),
                ('weather', models.CharField(blank=True, max_length=50, null=True)),
                ('light', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('city_district', models.CharField(blank=True, max_length=50, null=True)),
                ('county', models.CharField(blank=True, max_length=50, null=True)),
                ('neighborhood', models.CharField(blank=True, max_length=50, null=True)),
                ('road', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('grout.record',),
        ),
        migrations.CreateModel(
            name='RecordDuplicate',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('score', models.FloatField(default=0)),
                ('resolved', models.BooleanField(default=False)),
                ('duplicate_record', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='duplicate_record', to='data.DriverRecord')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='data.DedupeJob')),
                ('record', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='record', to='data.DriverRecord')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecordCostConfig',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('content_type_key', models.TextField()),
                ('property_key', models.TextField()),
                ('cost_prefix', models.CharField(blank=True, max_length=6, null=True)),
                ('cost_suffix', models.CharField(blank=True, max_length=6, null=True)),
                ('enum_costs', django.contrib.postgres.fields.hstore.HStoreField()),
                ('record_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='grout.RecordType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecordAuditLogEntry',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(db_index=True, max_length=30)),
                ('record_uuid', models.CharField(db_index=True, max_length=36)),
                ('date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete')], max_length=6)),
                ('log', models.TextField(null=True)),
                ('signature', models.CharField(max_length=36, null=True)),
                ('record', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='data.DriverRecord')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
