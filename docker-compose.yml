version: '3'
services:
  postgres:
    build:
      context: ./
      args:
        - buildno=1
      dockerfile: Dockerfile.database
    volumes:
      - /opt/${CONTAINER_NAME}-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=driver
      - POSTGRES_DBNAME=driver
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    container_name: database-${CONTAINER_NAME}
    image:
      alien9/driver-database
  
  redis-server:
    image: redis
    container_name: "redis-server-${CONTAINER_NAME}"

  driver-django:
    build:
      context: ./
    volumes:
      - ./driver_static:/var/www/static
    depends_on:
      - redis-server
      - postgres
    environment:
      - CENTER_LATITUDE=${CENTER_LATITUDE}
      - CENTER_LONGITUDE=${CENTER_LONGITUDE}
      - ZOOM=${ZOOM}
      - HOST_URL=${PROTOCOL}://${HOST_NAME}
      - HOSTNAME=${HOST_NAME}
      - COUNTRY=${COUNTRY}
      - TIMEZONE=${TIMEZONE}
      - DJANGO_ENV=production
      - DRIVER_DB_HOST=database-${CONTAINER_NAME}
      - DRIVER_DB_NAME=driver
      - DRIVER_DB_PASSWORD=${DATABASE_PASSWORD}
      - DRIVER_REDIS_HOST=redis-server-${CONTAINER_NAME}
      - STATIC_ROOT=/var/www/static/
      - STATIC_URL=${PROTOCOL}://${HOST_NAME}/static/ 
      - OAUTH_CLIENT_ID=${CLIENTID}
      - OAUTH_CLIENT_SECRET=${CLIENT_SECRET}
      - DRIVER_ADMIN_PASSWORD=${DRIVER_ADMIN_PASSWORD}
    container_name: driver-django-${CONTAINER_NAME}
    image: alien9/driver-django
      
  driver-celery:
    volumes:
      - ${WINDSHAFT_FILES}/zip:/var/www/media
    depends_on:
      - redis-server
      - postgres
    environment:
      - HOST_URL=${PROTOCOL}://${HOST_NAME}
      - HOSTNAME=${HOST_NAME}
      - COUNTRY_CODE=${COUNTRY_CODE}
      - TIMEZONE=${TIMEZONE}
      - DJANGO_ENV=production
      - DRIVER_DB_HOST=database-${CONTAINER_NAME}
      - DRIVER_DB_NAME=driver
      - DRIVER_DB_PASSWORD=${DATABASE_PASSWORD}
      - DRIVER_REDIS_HOST=redis-server-${CONTAINER_NAME}
      - STATIC_ROOT=/var/www/static/
      - STATIC_URL=${PROTOCOL}://${HOST_NAME}/static/ 
      - OAUTH_CLIENT_ID=${CLIENTID}
      - OAUTH_CLIENT_SECRET=${CLIENT_SECRET}
    entrypoint: ["celery", "-A", "driver", "worker", "--queue=taskworker", "--loglevel=info", "--concurrency=4"]
    container_name: driver-celery-${CONTAINER_NAME}
    image: alien9/driver-django
  
  windshaft:
    command: server.js
    container_name: windshaft-${CONTAINER_NAME}
    links:
      - redis-server:redis
    depends_on:
      - redis-server
      - postgres
    volumes:
      - ${WINDSHAFT_FILES}/windshaft/driver.js:/opt/windshaft/driver.js
      - ${WINDSHAFT_FILES}/windshaft/healthCheck.js:/opt/windshaft/healthCheck.js
      - ${WINDSHAFT_FILES}/windshaft/alphamarker.png:/opt/windshaft/alphamarker.png
      - ${WINDSHAFT_FILES}/windshaft/server.js:/opt/windshaft/server.js
    environment:
      - DRIVER_DB_NAME=driver
      - DRIVER_DB_USER=driver
      - DRIVER_DB_PASSWORD=${DATABASE_PASSWORD}
      - WINDSHAFT_DB_USER=driver
      - WINDSHAFT_DB_PASSWORD=${DATABASE_PASSWORD}
      - DRIVER_DB_HOST=database-${CONTAINER_NAME}
      - DRIVER_DB_PORT=5432
      - DRIVER_APP_HOST=${PROTOCOL}://${HOST_NAME}
      - DRIVER_REDIS_HOST=redis-server-${CONTAINER_NAME}
      - DRIVER_REDIS_PORT=6379
    image: quay.io/azavea/windshaft:0.1.0


  mapserver:
    container_name: mapserver-${CONTAINER_NAME}
    depends_on:
      - postgres
    volumes:
      - ./mapserver/:/etc/mapserver
    image: geodata/mapserver
    ports:
      - "8888:80"


