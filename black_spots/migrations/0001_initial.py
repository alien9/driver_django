# Generated by Django 3.2.4 on 2022-06-10 19:42

import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('grout', '0029_auto_20201120_1011'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlackSpotConfig',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('severity_percentile_threshold', models.FloatField(default=0.95, validators=[django.core.validators.MaxValueValidator(1.0), django.core.validators.MinValueValidator(0.0)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlackSpotRecordsFile',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('csv', models.FileField(upload_to='blackspot_records/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlackSpotTrainingCsv',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('csv', models.FileField(upload_to='training/blackspot/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LoadForecastTrainingCsv',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('csv', models.FileField(upload_to='training/forecast')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RoadMap',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('COMPLETE', 'Complete')], default='PENDING', max_length=10)),
                ('label', models.CharField(max_length=128, unique=True, validators=[django.core.validators.MinLengthValidator(3)])),
                ('color', models.CharField(default='blue', max_length=64)),
                ('display_field', models.CharField(blank=True, max_length=10, null=True)),
                ('data_fields', models.JSONField(blank=True, null=True)),
                ('errors', models.JSONField(blank=True, null=True)),
                ('source_file', models.FileField(upload_to='boundaries/%Y/%m/%d')),
            ],
            options={
                'verbose_name': 'Road Map',
                'verbose_name_plural': 'Road Maps',
            },
        ),
        migrations.CreateModel(
            name='RoadSegmentsShapefile',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('shp_tgz', models.FileField(upload_to='road_segments/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Road',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('data', models.JSONField()),
                ('name', models.TextField(max_length=100, null=True)),
                ('geom', django.contrib.gis.db.models.fields.LineStringField(srid=4326)),
                ('roadmap', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='roads', to='black_spots.roadmap')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlackSpotSet',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('title', models.TextField(max_length=100)),
                ('size', models.IntegerField(default=100)),
                ('effective_start', models.DateTimeField()),
                ('effective_end', models.DateTimeField(blank=True, null=True)),
                ('display', models.BooleanField(default=True)),
                ('record_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='grout.recordtype')),
                ('roadmap', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='black_spots.roadmap')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlackSpot',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('geom', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                ('severity_score', models.FloatField()),
                ('num_records', models.PositiveIntegerField()),
                ('num_severe', models.PositiveIntegerField()),
                ('name', models.TextField(default='', max_length=100)),
                ('black_spot_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='black_spots.blackspotset')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
